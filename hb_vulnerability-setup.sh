#! /bin/bash
# A script to prepare a ubuntu 12.04.5 device to be vulnerable
# to the heartbleed bug. 

# Created by Jamie Coupe as a python3 version of a Heartbleed IDS tool created
# as part of his honours project.

# Set constants
DEPENDANCIES_FOLDER="dependencies"
PCRE_FOLDER="dependencies/pcre"

# Echo Colours
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No colour

# Function to print success or failure message
function try_command(){
	local command=$1
		
	if $Command; then
	        echo -e "${GREEN}Successfull"
	else
        	echo -e "${RED}Unsuccessfull ${NC} "
	fi
}

# Function to install a package
function install_package() {
	local folder=$1
	local package=$2

        echo -ne "${BLUE}Installing: $package:"

        if dpkg -i "$1/$2"; then
		echo -ne "${BLUE}Installing: $package:"
       	        echo -e "${GREEN}Installed Successfully"
        else
		echo -ne "${BLUE}Installing: $package:"
               	echo -e "${RED}Failed to install${NC} "
       	fi
}

echo -e  "Starting Heartbleed Setup"

# Check version of machines
echo -ne  "${BLUE}Carrying out version check: "

release=$(lsb_release -d)
if [[ $release = *"12.04.5"*  ]]
then
	echo -e "${GREEN}Right Version (12.04.5)"
else
	echo -e "${RED}Wrong version"
	echo -e "Quitting${NC}"
	exit 1
fi

# Install gnu c++ compiler
echo -e "${BLUE}Installing GNU C++ Compiler" 
echo -ne "${BLUE}Updating apt-get       : " 
try_command "$(apt-get update)"

echo -ne "${BLUE}Install Dev tools	: "
try_command "$(apt-get --assume-yes install build-essential manpages-dev)"


# Install libprce3 and dependancies (3, cpp0, dev in order)
# .deb files are held in the dependencies folder
echo -e "${BLUE}Installing libprce3 and dependancies"

install_package "$PCRE_FOLDER" "libpcre3_8.12-4_amd64.deb"
install_package "$PCRE_FOLDER" "libpcrecpp0_8.12-4_amd64.deb"
install_package "$PCRE_FOLDER" "libpcre3-dev_8.12-4_amd64.deb"

# Install pcre 8.40 from local package
echo -ne "${BLUE}Copying pcre-8.40	: "
try_command "$(cp $PCRE_FOLDER/pcre-8.40.tar.gz ~)"

echo -ne "${BLUE}Extracting pcre-8.40	: "
cd ~
try_command "$(tar -zxvf pcre-8.40.tar.gz)"

echo -ne "${BLUE}Configuring pcre-8.40	: "
cd pcre-8.40
try_command "$(./configure --prefix=/usr/local/pcre-config)"

echo -ne "${BLUE}Making pcre-8.40 	: "
try_command "$(make)"

echo -ne "${BLUE}Installing pcre-8.40	: "
try_command "$(make install)"

# Install openssl-1.0.1e



# Exit Statement
echo -e "${BLUE}Overall status		: ${GREEN}Complete${NC} "
exit 0
